#ifndef MATRIX4_H
#define MATRIX4_H

#include "common/BasicType.h"
#include <span>

class Vector3;

class Matrix4
{
public:
    Matrix4(
        HIGH_PRECISION n11 = 1.0, HIGH_PRECISION n12 = 0.0, HIGH_PRECISION n13 = 0.0, HIGH_PRECISION n14 = 0.0,
        HIGH_PRECISION n21 = 0.0, HIGH_PRECISION n22 = 1.0, HIGH_PRECISION n23 = 0.0, HIGH_PRECISION n24 = 0.0,
        HIGH_PRECISION n31 = 0.0, HIGH_PRECISION n32 = 0.0, HIGH_PRECISION n33 = 1.0, HIGH_PRECISION n34 = 0.0,
        HIGH_PRECISION n41 = 0.0, HIGH_PRECISION n42 = 0.0, HIGH_PRECISION n43 = 0.0, HIGH_PRECISION n44 = 1.0);
    ~Matrix4();
    std::span<const HIGH_PRECISION, 16> elements() const;
    void set(
        HIGH_PRECISION n11, HIGH_PRECISION n12, HIGH_PRECISION n13, HIGH_PRECISION n14,
        HIGH_PRECISION n21, HIGH_PRECISION n22, HIGH_PRECISION n23, HIGH_PRECISION n24,
        HIGH_PRECISION n31, HIGH_PRECISION n32, HIGH_PRECISION n33, HIGH_PRECISION n34,
        HIGH_PRECISION n41, HIGH_PRECISION n42, HIGH_PRECISION n43, HIGH_PRECISION n44);
private:
    bool m_isMatrix4 = false;
    HIGH_PRECISION m_elements[16] = {};
};

#endif